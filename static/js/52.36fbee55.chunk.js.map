{"version":3,"file":"static/js/52.36fbee55.chunk.js","mappings":"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","sources":["components/ContactsTable/ContactsTable.styled.js","components/ContactsTable/ContactRow/ContactRow.styled.js","components/ContactsTable/ContactRow/ContactRow.jsx","components/ContactsTable/ContactsTable.jsx","components/FilterBar/FilterBar.styled.js","components/FilterBar/FilterBar.jsx","images/Svg.jsx","pages/Trash/Trash.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Table = styled.table`\n    width: calc(100% / 4 * 3);\n    overflow: hidden;\n    border: none;\n    border-spacing: 1px;\n\n    text-align: left;\n`\nexport const HeadRow = styled.thead`\n    height: 49px;\n    padding: 4px 4px 4px 10px;\n    color: #5f6368;\n    font-size: 14px;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n`\nexport const HeadCell = styled.th`\n    width: calc(100% / 6);\n    font-weight: 400;\n`","import styled from \"styled-components\";\n\nexport const Row = styled.tr`\n    height: 56px;\n\n    :hover {\n        background-color: #F5F5F5;\n    }\n`\nexport const Cell = styled.td`\n    color: #202124;\n    font-size: 14px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    text-align: left;\n`\nexport const CellAmount = styled(Cell)`\n    text-align: left;\n`\nexport const DeleteBtn = styled.button`\n    height: 40px;\n    width: 40px;\n    margin-top: 7px;\n    border: 0;\n    background-color: transparent;\n    border-radius: 50%;\n    cursor: pointer;\n\n    :focus, :hover {\n        background-color: rgba(60,64,67,.1);\n    }\n`\nexport const DeleteForeverBtn = styled.button`\n    display: inline-block;\n    width: 120px;\n    height: 36px;\n    border: 0;\n    background-color: transparent;\n    color: gray;\n    font-weight: 600;\n    border-radius: 5px;\n    outline: none !important;\n    margin-top: 7px;\n    cursor: pointer;\n\n    :hover, :focus, :active {\n        background-color: lightgray;\n    }\n`\nexport const CellAction = styled(Cell)`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n","import {\n  Row,\n  Cell,\n  CellAmount,\n  DeleteBtn,\n  DeleteForeverBtn,\n  CellAction,\n} from './ContactRow.styled';\nimport PropTypes from 'prop-types';\nimport { SvgDelete, SvgRecovery } from 'images/Svg';\nimport {\n  useDeleteContactMutation,\n  useToTrashContactMutation,\n} from 'redux/mockApiSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({ position: 'center-top' });\n\nexport const ContactRow = ({ id, name, number, isDeleted }) => {\n  // processing deleting forever\n  const [deleteContact] = useDeleteContactMutation(id);\n\n  const handleDeleteContact = () => {\n    deleteContact(id);\n    Notify.success('Yor contact has been deleted forever');\n  };\n\n  // delete to trash\n  const [toTrashContact, { isLoading, isSuccess }] =\n    useToTrashContactMutation();\n\n  const handleDeleteBtnClick = () => {\n    const message = isDeleted\n      ? 'Your contact has been restored'\n      : 'Your contact has been moved to Trash';\n    isDeleted = !isDeleted;\n    toTrashContact({ id, isDeleted });\n    Notify.success(message);\n  };\n\n  return (\n    <Row>\n      <Cell>{name}</Cell>\n      <CellAmount>{number}</CellAmount>\n      <CellAction>\n        <DeleteBtn\n          onClick={handleDeleteBtnClick}\n          disabled={isLoading || isSuccess}\n        >\n          {isDeleted ? <SvgRecovery /> : <SvgDelete />}\n        </DeleteBtn>\n        {isDeleted ? (\n          <DeleteForeverBtn onClick={handleDeleteContact}>\n            Delete forever\n          </DeleteForeverBtn>\n        ) : (\n          <></>\n        )}\n      </CellAction>\n    </Row>\n  );\n};\n\nContactRow.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  isDeleted: PropTypes.bool.isRequired,\n};\n","import { Table, HeadRow, HeadCell } from './ContactsTable.styled';\nimport { ContactRow } from './ContactRow/ContactRow';\nimport { useGetMockApiQuery } from 'redux/mockApiSlice';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nexport const ContactsTable = ({ trash }) => {\n  let contactsForRender = [];\n  const { data, isSuccess, isError } = useGetMockApiQuery('', {\n    refetchOnFocus: true,\n  });\n\n  const { contactsFilter, trashFilter } = useSelector(state => state.filter);\n  const filter = trash ? trashFilter : contactsFilter;\n\n  // makes a list for render if request is success\n  if (isSuccess) {\n    contactsForRender = data\n      .filter(\n        ({ name, phone, isDeleted }) =>\n          isDeleted === trash &&\n          (name.includes(filter) || phone.includes(filter))\n      )\n      .reverse();\n  }\n\n  return (\n    <>\n      <Table>\n        <HeadRow>\n          <tr>\n            <HeadCell>Name</HeadCell>\n            <HeadCell>Phone number</HeadCell>\n            <HeadCell>Action</HeadCell>\n          </tr>\n        </HeadRow>\n        <tbody>\n          {contactsForRender.map(({ id, name, phone, isDeleted }) => (\n            <ContactRow\n              key={id}\n              id={id}\n              name={name}\n              number={phone}\n              isDeleted={isDeleted}\n            />\n          ))}\n        </tbody>\n      </Table>\n      {isError && (\n        <h2>An error appeared to be on our side... We're so sorry :(</h2>\n      )}\n    </>\n  );\n};\n\nContactsTable.propTypes = {\n  trash: PropTypes.bool.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FilterForm = styled(Form)`\n  max-width: 725px;\n  width: 100%;\n  position: relative;\n  display: flex;\n  height: 48px;\n  margin-top: 10px;\n`;\nexport const FilterField = styled(Field)`\n  margin-left: 0px;\n  height: 42px;\n  width: calc(100% - 58px);\n  padding-left: 58px;\n  font-size: 16px;\n  background-color: #f1f3f4;\n  border: none;\n  outline: none;\n\n  :focus,\n  :active {\n    outline: none;\n    background-color: #fff;\n    box-shadow: 0 1px 2px 0 rgb(60 64 67 / 30%),\n      0 1px 3px 1px rgb(60 64 67 / 15%);\n  }\n`;\nexport const FilterIcon = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 5px;\n  height: 40px;\n  width: 40px;\n  background-color: transparent;\n  border: 0;\n  border-radius: 50%;\n`;\nexport const ClearFilterBtn = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 3px;\n  height: 40px;\n  width: 40px;\n  border: 0;\n  background-color: transparent;\n  border: 0;\n  border-radius: 50%;\n\n  :focus,\n  :hover {\n    background-color: rgba(60, 64, 67, 0.1);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  FilterForm,\n  FilterField,\n  FilterIcon,\n  ClearFilterBtn,\n} from './FilterBar.styled';\nimport { Formik } from 'formik';\nimport { SvgSearch, SvgDelete } from 'images/Svg';\nimport {\n  setTrashFilter,\n  clearFilter,\n  setContactsFilter,\n} from 'redux/filterSlice';\n\nexport const FilterBar = ({ trash }) => {\n  const { contactsFilter, trashFilter } = useSelector(state => state.filter);\n  const filter = trash ? trashFilter : contactsFilter;\n  console.log(trash, 'trash', trashFilter, 'conta', contactsFilter);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    trash\n      ? dispatch(setTrashFilter(data.currentTarget.value))\n      : dispatch(setContactsFilter(data.currentTarget.value));\n  };\n\n  const onClear = () => {\n    dispatch(clearFilter());\n  };\n\n  return (\n    <Formik initialValues={''}>\n      <FilterForm>\n        <FilterIcon>\n          <SvgSearch />\n        </FilterIcon>\n        <FilterField\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search contacts\"\n          onChange={onSubmit}\n          required\n          value={filter}\n          autoComplete=\"off\"\n        />\n        <ClearFilterBtn type=\"clear\" onClick={onClear}>\n          <SvgDelete />\n        </ClearFilterBtn>\n      </FilterForm>\n    </Formik>\n  );\n};\n","export const SvgContact = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n      <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n    </svg>\n  );\n};\n\nexport const SvgTrash = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n      <path d=\"M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z\"></path>\n      <path d=\"M9 8h2v9H9zm4 0h2v9h-2z\"></path>\n    </svg>\n  );\n};\n\nexport const SvgSearch = () => {\n  return (\n    <svg\n      focusable=\"false\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      width=\"24px\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M20.49,19l-5.73-5.73C15.53,12.2,16,10.91,16,9.5C16,5.91,13.09,3,9.5,3S3,5.91,3,9.5C3,13.09,5.91,16,9.5,16 c1.41,0,2.7-0.47,3.77-1.24L19,20.49L20.49,19z M5,9.5C5,7.01,7.01,5,9.5,5S14,7.01,14,9.5S11.99,14,9.5,14S5,11.99,5,9.5z\"></path>\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\"></path>\n    </svg>\n  );\n};\n\nexport const SvgDelete = () => {\n  return (\n    <svg\n      focusable=\"false\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      width=\"24px\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    </svg>\n  );\n};\n\nexport const SvgRecovery = () => {\n  return (\n    <svg\n      fill=\"#000000\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 72 72\"\n      width=\"32px\"\n      height=\"32px\"\n    >\n      <path d=\"M 34.099609 7.0019531 C 33.029594 6.94575 32 7.7786875 32 8.9921875 L 32 12.339844 C 20.664873 14.250415 12 24.129249 12 36 C 12 49.234 22.767 60 36 60 C 49.233 60 60 49.234 60 36 C 60 30.33 57.985125 24.827859 54.328125 20.505859 C 52.898125 18.818859 50.374406 18.606156 48.691406 20.035156 C 47.004406 21.462156 46.793703 23.986828 48.220703 25.673828 C 50.657703 28.552828 52 32.22 52 36 C 52 44.822 44.822 52 36 52 C 27.178 52 20 44.822 20 36 C 20 28.561394 25.110881 22.310779 32 20.527344 L 32 23.005859 C 32 24.624859 33.829484 25.566 35.146484 24.625 L 44.951172 17.617188 C 46.061172 16.824188 46.061172 15.173859 44.951172 14.380859 L 35.146484 7.3730469 C 34.817234 7.1377969 34.456281 7.0206875 34.099609 7.0019531 z\" />\n    </svg>\n  );\n};\n\nexport const SvgName = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n      <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n    </svg>\n  );\n};\n\nexport const SvgTel = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n      <path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path>\n      <path d=\"M6.54 5c.06.89.21 1.76.45 2.59l-1.2 1.2c-.41-1.2-.67-2.47-.76-3.79h1.51m9.86 12.02c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19M7.5 3H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1-1.24 0-2.45-.2-3.57-.57-.1-.04-.21-.05-.31-.05-.26 0-.51.1-.71.29l-2.2 2.2c-2.83-1.45-5.15-3.76-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1z\"></path>\n    </svg>\n  );\n};\n","import React from 'react';\nimport { ContactsTable } from 'components/ContactsTable/ContactsTable';\nimport { FilterBar } from 'components/FilterBar/FilterBar';\n\nconst Trash = () => {\n  return (\n    <>\n      <FilterBar trash={true} />\n      <ContactsTable trash={true} />\n    </>\n  );\n};\n\nexport default Trash;\n"],"names":["Table","styled","HeadRow","HeadCell","Row","Cell","CellAmount","DeleteBtn","DeleteForeverBtn","CellAction","Notify","position","ContactRow","id","name","number","isDeleted","useDeleteContactMutation","deleteContact","useToTrashContactMutation","toTrashContact","isLoading","isSuccess","onClick","message","disabled","Svg","ContactsTable","trash","contactsForRender","useGetMockApiQuery","refetchOnFocus","data","isError","useSelector","state","filter","contactsFilter","trashFilter","phone","includes","reverse","map","FilterForm","Form","FilterField","Field","FilterIcon","ClearFilterBtn","FilterBar","console","log","dispatch","useDispatch","initialValues","type","placeholder","onChange","setTrashFilter","currentTarget","value","setContactsFilter","required","autoComplete","clearFilter","SvgContact","width","height","viewBox","d","fill","SvgTrash","SvgSearch","focusable","xmlns","SvgDelete","SvgRecovery","SvgName","SvgTel"],"sourceRoot":""}