{"version":3,"file":"static/js/752.3875fffc.chunk.js","mappings":"yOAEaA,EAAQC,EAAAA,GAAAA,MAAH,qJAQLC,EAAUD,EAAAA,GAAAA,MAAH,uKAOPE,EAAWF,EAAAA,GAAAA,GAAH,2E,SCfRG,EAAMH,EAAAA,GAAAA,GAAH,4FAOHI,EAAOJ,EAAAA,GAAAA,GAAH,iIAOJK,GAAaL,EAAAA,EAAAA,IAAOI,EAAPJ,CAAH,6CAGVM,EAAmBN,EAAAA,GAAAA,OAAH,gVAmBhBO,GAAaP,EAAAA,EAAAA,IAAOI,EAAPJ,CAAH,qG,wCC1BvBQ,EAAAA,OAAAA,KAAY,CAAEC,SAAU,eAEjB,I,QAAMC,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAErC,GAAwBC,EAAAA,EAAAA,IAAyBH,GAA1CI,GAAP,eAOA,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,UAAOQ,KACP,SAACP,EAAD,UAAaQ,KACb,SAACN,EAAD,WACE,SAACD,EAAD,CAAkBU,QAVI,WAC1BD,EAAcJ,GACdH,EAAAA,OAAAA,QAAe,uCAChB,EAOK,UACE,SAAC,MAAD,CAAkBS,KAAK,gBAKhC,E,8BC3BYC,EAAgB,WAC3B,IAAIC,EAAoB,KAExB,GAAqCC,EAAAA,EAAAA,IAAqB,GAAI,CAC5DC,gBAAgB,IADVC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,QAInBC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAW3B,OARIJ,IACFJ,EAAoBG,EACjBG,QACC,gBAAGb,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OAAsBD,EAAKgB,SAASH,IAAWZ,EAAOe,SAASH,EAA/D,IAEDI,WAGwB,OAAtBV,GACL,iCACE,UAACpB,EAAD,YACE,SAACE,EAAD,WACE,2BACE,SAACC,EAAD,oBACA,SAACA,EAAD,4BACA,SAACA,EAAD,2BAGJ,2BACGiB,EAAkBW,KAAI,gBAAGnB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACrB,SAACH,EAAD,CAAqBC,GAAIA,EAAIC,KAAMA,EAAMC,OAAQA,GAAhCF,EADI,SAK1Ba,IACC,yFAIJ,SAACO,EAAA,EAAD,GAEH,E,UC7CYC,GAAahC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAH,4IAQVkC,GAAclC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAH,mXAkBXoC,EAAapC,EAAAA,GAAAA,IAAH,oLAUVqC,EAAiBrC,EAAAA,GAAAA,OAAH,6Q,8BC1BdsC,EAAY,WACvB,IAAMb,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBY,GAAWC,EAAAA,EAAAA,MAUjB,OACE,SAAC,KAAD,CAAQC,cAAe,GAAvB,UACE,UAACT,EAAD,YACE,SAACI,EAAD,WACE,SAAC,MAAD,OAEF,SAACF,EAAD,CACEQ,KAAK,OACL9B,KAAK,SACL+B,YAAY,kBACZC,SAlBS,SAAAtB,GACfiB,GAASM,EAAAA,EAAAA,IAAUvB,EAAKwB,cAAcC,OACvC,EAiBOC,UAAQ,EACRD,MAAOtB,EACPwB,aAAa,SAEf,SAACZ,EAAD,CAAgBK,KAAK,QAAQ1B,QAnBnB,WACduB,GAASW,EAAAA,EAAAA,MACV,EAiBK,UACE,SAAC,MAAD,CAASjC,KAAK,cAKvB,EC3BD,EAbiB,WAGf,OAFyBS,EAAAA,EAAAA,IAAYyB,EAAAA,KAGnC,SAACpB,EAAA,EAAD,KAEA,iCACE,SAACO,EAAD,KACA,SAACpB,EAAD,MAGL,C","sources":["components/ContactsTable/ContactsTable.styled.js","components/ContactsTable/ContactRow/ContactRow.styled.js","components/ContactsTable/ContactRow/ContactRow.jsx","components/ContactsTable/ContactsTable.jsx","components/FilterBar/FilterBar.styled.js","components/FilterBar/FilterBar.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Table = styled.table`\n    width: calc(100% / 4 * 3);\n    overflow: hidden;\n    border: none;\n    border-spacing: 1px;\n\n    text-align: left;\n`\nexport const HeadRow = styled.thead`\n    height: 49px;\n    padding: 4px 4px 4px 10px;\n    color: #5f6368;\n    font-size: 14px;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n`\nexport const HeadCell = styled.th`\n    width: calc(100% / 6);\n    font-weight: 400;\n`","import styled from 'styled-components';\n\nexport const Row = styled.tr`\n  height: 56px;\n\n  :hover {\n    background-color: #f5f5f5;\n  }\n`;\nexport const Cell = styled.td`\n  color: #202124;\n  font-size: 14px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  text-align: left;\n`;\nexport const CellAmount = styled(Cell)`\n  text-align: left;\n`;\nexport const DeleteForeverBtn = styled.button`\n  display: inline-block;\n  width: 50px;\n  height: 36px;\n  border: 0;\n  background-color: transparent;\n  color: gray;\n  font-weight: 600;\n  border-radius: 5px;\n  outline: none !important;\n  margin-top: 7px;\n  cursor: pointer;\n\n  :hover,\n  :focus,\n  :active {\n    background-color: lightgray;\n  }\n`;\nexport const CellAction = styled(Cell)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import {\n  Row,\n  Cell,\n  CellAmount,\n  DeleteForeverBtn,\n  CellAction,\n} from './ContactRow.styled';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/serverApi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\n\nNotify.init({ position: 'center-top' });\n\nexport const ContactRow = ({ id, name, number }) => {\n  // processing deleting forever\n  const [deleteContact] = useDeleteContactMutation(id);\n\n  const handleDeleteContact = () => {\n    deleteContact(id);\n    Notify.success('Yor contact has been deleted forever');\n  };\n\n  return (\n    <Row>\n      <Cell>{name}</Cell>\n      <CellAmount>{number}</CellAmount>\n      <CellAction>\n        <DeleteForeverBtn onClick={handleDeleteContact}>\n          <RiDeleteBin5Line size=\"1.2em\" />\n        </DeleteForeverBtn>\n      </CellAction>\n    </Row>\n  );\n};\n\nContactRow.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Table, HeadRow, HeadCell } from './ContactsTable.styled';\nimport { ContactRow } from './ContactRow/ContactRow';\nimport { useGetServerApiQuery } from 'redux/serverApi';\nimport { getFilter } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\n\nexport const ContactsTable = () => {\n  let contactsForRender = null;\n\n  const { data, isSuccess, isError } = useGetServerApiQuery('', {\n    refetchOnFocus: true,\n  });\n\n  const filter = useSelector(getFilter);\n\n  // makes a list for render if request is success\n  if (isSuccess) {\n    contactsForRender = data\n      .filter(\n        ({ name, number }) => name.includes(filter) || number.includes(filter)\n      )\n      .reverse();\n  }\n\n  return contactsForRender !== null ? (\n    <>\n      <Table>\n        <HeadRow>\n          <tr>\n            <HeadCell>Name</HeadCell>\n            <HeadCell>Phone number</HeadCell>\n            <HeadCell>Action</HeadCell>\n          </tr>\n        </HeadRow>\n        <tbody>\n          {contactsForRender.map(({ id, name, number }) => (\n            <ContactRow key={id} id={id} name={name} number={number} />\n          ))}\n        </tbody>\n      </Table>\n      {isError && (\n        <h2>An error appeared to be on our side... We're so sorry :(</h2>\n      )}\n    </>\n  ) : (\n    <Spinner />\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FilterForm = styled(Form)`\n  max-width: 725px;\n  width: 100%;\n  position: relative;\n  display: flex;\n  height: 48px;\n  margin-top: 10px;\n`;\nexport const FilterField = styled(Field)`\n  margin-left: 0px;\n  height: 42px;\n  width: calc(100% - 58px);\n  padding-left: 58px;\n  font-size: 16px;\n  background-color: #f1f3f4;\n  border: none;\n  outline: none;\n\n  :focus,\n  :active {\n    outline: none;\n    background-color: #fff;\n    box-shadow: 0 1px 2px 0 rgb(60 64 67 / 30%),\n      0 1px 3px 1px rgb(60 64 67 / 15%);\n  }\n`;\nexport const FilterIcon = styled.div`\n  position: absolute;\n  top: 15px;\n  left: 12px;\n  height: 40px;\n  width: 40px;\n  background-color: transparent;\n  border: 0;\n  border-radius: 50%;\n`;\nexport const ClearFilterBtn = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 3px;\n  height: 40px;\n  width: 40px;\n  border: 0;\n  background-color: transparent;\n  border: 0;\n  border-radius: 50%;\n\n  :focus,\n  :hover {\n    background-color: rgba(60, 64, 67, 0.1);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  FilterForm,\n  FilterField,\n  FilterIcon,\n  ClearFilterBtn,\n} from './FilterBar.styled';\nimport { Formik } from 'formik';\nimport { clearFilter, setFilter } from 'redux/filter/filterSlice';\nimport { FaSearch } from 'react-icons/fa';\nimport { CgClose } from 'react-icons/cg';\nimport { getFilter } from 'redux/selectors';\n\nexport const FilterBar = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(setFilter(data.currentTarget.value));\n  };\n\n  const onClear = () => {\n    dispatch(clearFilter());\n  };\n\n  return (\n    <Formik initialValues={''}>\n      <FilterForm>\n        <FilterIcon>\n          <FaSearch />\n        </FilterIcon>\n        <FilterField\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search contacts\"\n          onChange={onSubmit}\n          required\n          value={filter}\n          autoComplete=\"off\"\n        />\n        <ClearFilterBtn type=\"clear\" onClick={onClear}>\n          <CgClose size=\"2em\" />\n        </ClearFilterBtn>\n      </FilterForm>\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { ContactsTable } from 'components/ContactsTable/ContactsTable';\nimport { FilterBar } from 'components/FilterBar/FilterBar';\nimport { useSelector } from 'react-redux';\nimport { getIsRefreshingUser } from 'redux/selectors';\nimport { Spinner } from 'react-bootstrap';\n\nconst Contacts = () => {\n  const isRefreshingUser = useSelector(getIsRefreshingUser);\n\n  return isRefreshingUser ? (\n    <Spinner />\n  ) : (\n    <>\n      <FilterBar />\n      <ContactsTable />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Table","styled","HeadRow","HeadCell","Row","Cell","CellAmount","DeleteForeverBtn","CellAction","Notify","position","ContactRow","id","name","number","useDeleteContactMutation","deleteContact","onClick","size","ContactsTable","contactsForRender","useGetServerApiQuery","refetchOnFocus","data","isSuccess","isError","filter","useSelector","getFilter","includes","reverse","map","Spinner","FilterForm","Form","FilterField","Field","FilterIcon","ClearFilterBtn","FilterBar","dispatch","useDispatch","initialValues","type","placeholder","onChange","setFilter","currentTarget","value","required","autoComplete","clearFilter","getIsRefreshingUser"],"sourceRoot":""}