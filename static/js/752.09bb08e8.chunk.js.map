{"version":3,"file":"static/js/752.09bb08e8.chunk.js","mappings":"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","sources":["images/Svg.jsx","components/ContactsTable/ContactsTable.styled.js","components/ContactsTable/ContactRow/ContactRow.styled.js","components/ContactsTable/ContactRow/ContactRow.jsx","components/ContactsTable/ContactsTable.jsx","components/FilterBar/FilterBar.styled.js","components/FilterBar/FilterBar.jsx","pages/Contacts.jsx"],"sourcesContent":["export const SvgContact = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n      <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n    </svg>\n  );\n};\n\nexport const SvgSearch = () => {\n  return (\n    <svg\n      focusable=\"false\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      width=\"24px\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M20.49,19l-5.73-5.73C15.53,12.2,16,10.91,16,9.5C16,5.91,13.09,3,9.5,3S3,5.91,3,9.5C3,13.09,5.91,16,9.5,16 c1.41,0,2.7-0.47,3.77-1.24L19,20.49L20.49,19z M5,9.5C5,7.01,7.01,5,9.5,5S14,7.01,14,9.5S11.99,14,9.5,14S5,11.99,5,9.5z\"></path>\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\"></path>\n    </svg>\n  );\n};\n\nexport const SvgDelete = () => {\n  return (\n    <svg\n      focusable=\"false\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      width=\"24px\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    </svg>\n  );\n};\n\nexport const SvgName = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n      <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n    </svg>\n  );\n};\n\nexport const SvgTel = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n      <path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path>\n      <path d=\"M6.54 5c.06.89.21 1.76.45 2.59l-1.2 1.2c-.41-1.2-.67-2.47-.76-3.79h1.51m9.86 12.02c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19M7.5 3H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1-1.24 0-2.45-.2-3.57-.57-.1-.04-.21-.05-.31-.05-.26 0-.51.1-.71.29l-2.2 2.2c-2.83-1.45-5.15-3.76-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1z\"></path>\n    </svg>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n    width: calc(100% / 4 * 3);\n    overflow: hidden;\n    border: none;\n    border-spacing: 1px;\n\n    text-align: left;\n`\nexport const HeadRow = styled.thead`\n    height: 49px;\n    padding: 4px 4px 4px 10px;\n    color: #5f6368;\n    font-size: 14px;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n`\nexport const HeadCell = styled.th`\n    width: calc(100% / 6);\n    font-weight: 400;\n`","import styled from \"styled-components\";\n\nexport const Row = styled.tr`\n    height: 56px;\n\n    :hover {\n        background-color: #F5F5F5;\n    }\n`\nexport const Cell = styled.td`\n    color: #202124;\n    font-size: 14px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    text-align: left;\n`\nexport const CellAmount = styled(Cell)`\n    text-align: left;\n`\nexport const DeleteBtn = styled.button`\n    height: 40px;\n    width: 40px;\n    margin-top: 7px;\n    border: 0;\n    background-color: transparent;\n    border-radius: 50%;\n    cursor: pointer;\n\n    :focus, :hover {\n        background-color: rgba(60,64,67,.1);\n    }\n`\nexport const DeleteForeverBtn = styled.button`\n    display: inline-block;\n    width: 120px;\n    height: 36px;\n    border: 0;\n    background-color: transparent;\n    color: gray;\n    font-weight: 600;\n    border-radius: 5px;\n    outline: none !important;\n    margin-top: 7px;\n    cursor: pointer;\n\n    :hover, :focus, :active {\n        background-color: lightgray;\n    }\n`\nexport const CellAction = styled(Cell)`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n","import {\n  Row,\n  Cell,\n  CellAmount,\n  DeleteForeverBtn,\n  CellAction,\n} from './ContactRow.styled';\nimport PropTypes from 'prop-types';\nimport { SvgDelete } from 'images/Svg';\nimport { useDeleteContactMutation } from 'redux/mockApiSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({ position: 'center-top' });\n\nexport const ContactRow = ({ id, name, number }) => {\n  // processing deleting forever\n  const [deleteContact] = useDeleteContactMutation(id);\n\n  const handleDeleteContact = () => {\n    deleteContact(id);\n    Notify.success('Yor contact has been deleted forever');\n  };\n\n  return (\n    <Row>\n      <Cell>{name}</Cell>\n      <CellAmount>{number}</CellAmount>\n      <CellAction>\n        <DeleteForeverBtn onClick={handleDeleteContact}>\n          <SvgDelete />\n        </DeleteForeverBtn>\n      </CellAction>\n    </Row>\n  );\n};\n\nContactRow.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Table, HeadRow, HeadCell } from './ContactsTable.styled';\nimport { ContactRow } from './ContactRow/ContactRow';\nimport { useGetMockApiQuery } from 'redux/mockApiSlice';\nimport { useSelector } from 'react-redux';\n\nexport const ContactsTable = () => {\n  let contactsForRender = [];\n  const { data, isSuccess, isError } = useGetMockApiQuery('', {\n    refetchOnFocus: true,\n  });\n\n  const { filter } = useSelector(state => state.filter);\n\n  // makes a list for render if request is success\n  if (isSuccess) {\n    contactsForRender = data\n      .filter(\n        ({ name, number }) => name.includes(filter) || number.includes(filter)\n      )\n      .reverse();\n  }\n\n  return (\n    <>\n      <Table>\n        <HeadRow>\n          <tr>\n            <HeadCell>Name</HeadCell>\n            <HeadCell>Phone number</HeadCell>\n            <HeadCell>Action</HeadCell>\n          </tr>\n        </HeadRow>\n        <tbody>\n          {contactsForRender.map(({ id, name, number }) => (\n            <ContactRow key={id} id={id} name={name} number={number} />\n          ))}\n        </tbody>\n      </Table>\n      {isError && (\n        <h2>An error appeared to be on our side... We're so sorry :(</h2>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FilterForm = styled(Form)`\n  max-width: 725px;\n  width: 100%;\n  position: relative;\n  display: flex;\n  height: 48px;\n  margin-top: 10px;\n`;\nexport const FilterField = styled(Field)`\n  margin-left: 0px;\n  height: 42px;\n  width: calc(100% - 58px);\n  padding-left: 58px;\n  font-size: 16px;\n  background-color: #f1f3f4;\n  border: none;\n  outline: none;\n\n  :focus,\n  :active {\n    outline: none;\n    background-color: #fff;\n    box-shadow: 0 1px 2px 0 rgb(60 64 67 / 30%),\n      0 1px 3px 1px rgb(60 64 67 / 15%);\n  }\n`;\nexport const FilterIcon = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 5px;\n  height: 40px;\n  width: 40px;\n  background-color: transparent;\n  border: 0;\n  border-radius: 50%;\n`;\nexport const ClearFilterBtn = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 3px;\n  height: 40px;\n  width: 40px;\n  border: 0;\n  background-color: transparent;\n  border: 0;\n  border-radius: 50%;\n\n  :focus,\n  :hover {\n    background-color: rgba(60, 64, 67, 0.1);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  FilterForm,\n  FilterField,\n  FilterIcon,\n  ClearFilterBtn,\n} from './FilterBar.styled';\nimport { Formik } from 'formik';\nimport { SvgSearch, SvgDelete } from 'images/Svg';\nimport { clearFilter, setFilter } from 'redux/filterSlice';\n\nexport const FilterBar = () => {\n  const { filter } = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(setFilter(data.currentTarget.value));\n  };\n\n  const onClear = () => {\n    dispatch(clearFilter());\n  };\n\n  return (\n    <Formik initialValues={''}>\n      <FilterForm>\n        <FilterIcon>\n          <SvgSearch />\n        </FilterIcon>\n        <FilterField\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search contacts\"\n          onChange={onSubmit}\n          required\n          value={filter}\n          autoComplete=\"off\"\n        />\n        <ClearFilterBtn type=\"clear\" onClick={onClear}>\n          <SvgDelete />\n        </ClearFilterBtn>\n      </FilterForm>\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { ContactsTable } from 'components/ContactsTable/ContactsTable';\nimport { FilterBar } from 'components/FilterBar/FilterBar';\n\nconst Contacts = () => {\n  return (\n    <>\n      <FilterBar />\n      <ContactsTable />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["SvgContact","width","height","viewBox","d","fill","SvgSearch","focusable","xmlns","SvgDelete","SvgName","SvgTel","Table","styled","HeadRow","HeadCell","Row","Cell","CellAmount","DeleteForeverBtn","CellAction","Notify","position","ContactRow","id","name","number","useDeleteContactMutation","deleteContact","onClick","Svg","ContactsTable","contactsForRender","useGetMockApiQuery","refetchOnFocus","data","isSuccess","isError","filter","useSelector","state","includes","reverse","map","FilterForm","Form","FilterField","Field","FilterIcon","ClearFilterBtn","FilterBar","dispatch","useDispatch","initialValues","type","placeholder","onChange","setFilter","currentTarget","value","required","autoComplete","clearFilter"],"sourceRoot":""}